// Code generated by protoc-gen-go.
// source: projector.proto
// DO NOT EDIT!

package protobuf

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

// Flag is applicable to all vbuckets in the request
type MutationStreamFlag int32

const (
	// start vbucket-streams if it is not already active.
	MutationStreamFlag_MutationStreamStart MutationStreamFlag = 0
	// start vbucket-streams whether it is already active or not.
	MutationStreamFlag_MutationStreamRestart MutationStreamFlag = 1
	// shutdown vbucket-streams
	MutationStreamFlag_MutationStreamShutdown MutationStreamFlag = 2
	// whether projector should retry closed clonnection / stream with KV.
	MutationStreamFlag_UpstreamRetry MutationStreamFlag = 4
	// whether router should retry closed clonnection with indexer endpoint.
	MutationStreamFlag_DownstreamRetry MutationStreamFlag = 8
)

var MutationStreamFlag_name = map[int32]string{
	0: "MutationStreamStart",
	1: "MutationStreamRestart",
	2: "MutationStreamShutdown",
	4: "UpstreamRetry",
	8: "DownstreamRetry",
}
var MutationStreamFlag_value = map[string]int32{
	"MutationStreamStart":    0,
	"MutationStreamRestart":  1,
	"MutationStreamShutdown": 2,
	"UpstreamRetry":          4,
	"DownstreamRetry":        8,
}

func (x MutationStreamFlag) Enum() *MutationStreamFlag {
	p := new(MutationStreamFlag)
	*p = x
	return p
}
func (x MutationStreamFlag) String() string {
	return proto.EnumName(MutationStreamFlag_name, int32(x))
}
func (x *MutationStreamFlag) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MutationStreamFlag_value, data, "MutationStreamFlag")
	if err != nil {
		return err
	}
	*x = MutationStreamFlag(value)
	return nil
}

// Requested by Coordinator or indexer to start a mutation stream.
type MutationStreamRequest struct {
	Topic             *string             `protobuf:"bytes,1,req,name=topic" json:"topic,omitempty"`
	Flag              *MutationStreamFlag `protobuf:"varint,2,req,name=flag,enum=protobuf.MutationStreamFlag" json:"flag,omitempty"`
	RestartTimestamps []*BranchTimestamp  `protobuf:"bytes,3,rep,name=restartTimestamps" json:"restartTimestamps,omitempty"`
	// list of index applicable for this stream
	Indexes          []*Index `protobuf:"bytes,4,rep,name=indexes" json:"indexes,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MutationStreamRequest) Reset()         { *m = MutationStreamRequest{} }
func (m *MutationStreamRequest) String() string { return proto.CompactTextString(m) }
func (*MutationStreamRequest) ProtoMessage()    {}

func (m *MutationStreamRequest) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *MutationStreamRequest) GetFlag() MutationStreamFlag {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return MutationStreamFlag_MutationStreamStart
}

func (m *MutationStreamRequest) GetRestartTimestamps() []*BranchTimestamp {
	if m != nil {
		return m.RestartTimestamps
	}
	return nil
}

func (m *MutationStreamRequest) GetIndexes() []*Index {
	if m != nil {
		return m.Indexes
	}
	return nil
}

type MutationStreamResponse struct {
	Err   *Error  `protobuf:"bytes,1,req,name=err" json:"err,omitempty"`
	Topic *string `protobuf:"bytes,2,req,name=topic" json:"topic,omitempty"`
	// per bucket restart-timestamp, failover-timestamp, upr-timestamp
	RestartTimestamps  []*BranchTimestamp `protobuf:"bytes,3,rep,name=restartTimestamps" json:"restartTimestamps,omitempty"`
	FailoverTimestamps []*BranchTimestamp `protobuf:"bytes,4,rep,name=failoverTimestamps" json:"failoverTimestamps,omitempty"`
	UprTimestamps      []*BranchTimestamp `protobuf:"bytes,5,rep,name=uprTimestamps" json:"uprTimestamps,omitempty"`
	Indexes            []uint64           `protobuf:"varint,6,rep,name=indexes" json:"indexes,omitempty"`
	XXX_unrecognized   []byte             `json:"-"`
}

func (m *MutationStreamResponse) Reset()         { *m = MutationStreamResponse{} }
func (m *MutationStreamResponse) String() string { return proto.CompactTextString(m) }
func (*MutationStreamResponse) ProtoMessage()    {}

func (m *MutationStreamResponse) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *MutationStreamResponse) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *MutationStreamResponse) GetRestartTimestamps() []*BranchTimestamp {
	if m != nil {
		return m.RestartTimestamps
	}
	return nil
}

func (m *MutationStreamResponse) GetFailoverTimestamps() []*BranchTimestamp {
	if m != nil {
		return m.FailoverTimestamps
	}
	return nil
}

func (m *MutationStreamResponse) GetUprTimestamps() []*BranchTimestamp {
	if m != nil {
		return m.UprTimestamps
	}
	return nil
}

func (m *MutationStreamResponse) GetIndexes() []uint64 {
	if m != nil {
		return m.Indexes
	}
	return nil
}

// Requested by coordinator to should down a mutation stream and all KV
// connections active for that stream.
type ShutdownMutationStreamRequest struct {
	Topic            *string `protobuf:"bytes,1,req,name=topic" json:"topic,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ShutdownMutationStreamRequest) Reset()         { *m = ShutdownMutationStreamRequest{} }
func (m *ShutdownMutationStreamRequest) String() string { return proto.CompactTextString(m) }
func (*ShutdownMutationStreamRequest) ProtoMessage()    {}

func (m *ShutdownMutationStreamRequest) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

// Requested by Coordinator during bootstrap handshake to get the current list
// of active streams from projector
type ActiveStreamRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ActiveStreamRequest) Reset()         { *m = ActiveStreamRequest{} }
func (m *ActiveStreamRequest) String() string { return proto.CompactTextString(m) }
func (*ActiveStreamRequest) ProtoMessage()    {}

type ActiveStreamResponse struct {
	Err              *Error                    `protobuf:"bytes,1,req,name=err" json:"err,omitempty"`
	Streams          []*MutationStreamResponse `protobuf:"bytes,2,rep,name=streams" json:"streams,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ActiveStreamResponse) Reset()         { *m = ActiveStreamResponse{} }
func (m *ActiveStreamResponse) String() string { return proto.CompactTextString(m) }
func (*ActiveStreamResponse) ProtoMessage()    {}

func (m *ActiveStreamResponse) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *ActiveStreamResponse) GetStreams() []*MutationStreamResponse {
	if m != nil {
		return m.Streams
	}
	return nil
}

// Requested by Coordinator during initial index build, to calculate
// initial-build-timestamp for each bucket.
type CurrentTimestampRequest struct {
	Buckets          []string `protobuf:"bytes,1,rep,name=buckets" json:"buckets,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CurrentTimestampRequest) Reset()         { *m = CurrentTimestampRequest{} }
func (m *CurrentTimestampRequest) String() string { return proto.CompactTextString(m) }
func (*CurrentTimestampRequest) ProtoMessage()    {}

func (m *CurrentTimestampRequest) GetBuckets() []string {
	if m != nil {
		return m.Buckets
	}
	return nil
}

type CurrentTimestampResponse struct {
	CurrentTimestamps []*BranchTimestamp `protobuf:"bytes,1,rep,name=currentTimestamps" json:"currentTimestamps,omitempty"`
	XXX_unrecognized  []byte             `json:"-"`
}

func (m *CurrentTimestampResponse) Reset()         { *m = CurrentTimestampResponse{} }
func (m *CurrentTimestampResponse) String() string { return proto.CompactTextString(m) }
func (*CurrentTimestampResponse) ProtoMessage()    {}

func (m *CurrentTimestampResponse) GetCurrentTimestamps() []*BranchTimestamp {
	if m != nil {
		return m.CurrentTimestamps
	}
	return nil
}

// Requested by Coordinator to determine re-connect or rollback.
type FailoverLogRequest struct {
	Vbnos            []uint32 `protobuf:"varint,1,rep,name=vbnos" json:"vbnos,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *FailoverLogRequest) Reset()         { *m = FailoverLogRequest{} }
func (m *FailoverLogRequest) String() string { return proto.CompactTextString(m) }
func (*FailoverLogRequest) ProtoMessage()    {}

func (m *FailoverLogRequest) GetVbnos() []uint32 {
	if m != nil {
		return m.Vbnos
	}
	return nil
}

type FailoverLogResponse struct {
	Logs             []*FailoverLog `protobuf:"bytes,1,rep,name=logs" json:"logs,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *FailoverLogResponse) Reset()         { *m = FailoverLogResponse{} }
func (m *FailoverLogResponse) String() string { return proto.CompactTextString(m) }
func (*FailoverLogResponse) ProtoMessage()    {}

func (m *FailoverLogResponse) GetLogs() []*FailoverLog {
	if m != nil {
		return m.Logs
	}
	return nil
}

func init() {
	proto.RegisterEnum("protobuf.MutationStreamFlag", MutationStreamFlag_name, MutationStreamFlag_value)
}
