#!/bin/bash -e

cat >error.go <<EOF
 // This file was generated by error.sh
 // DO NOT EDIT FILE
 //
 package forestdb
 //#include <libforestdb/forestdb.h>
 import "C"
 import "fmt"
 type Error int
 func (e Error) Error() string {
   msg, ok := codeMap[int(e)]
   if !ok {
     msg = fmt.Sprintf("Unknown forestdb error %d", int(e))
   }
   return msg
 }
 const RESULT_SUCCESS C.fdb_status = C.FDB_RESULT_SUCCESS
 const RESULT_ITERATOR_FAIL = FDB_RESULT_ITERATOR_FAIL
EOF

header="../../../../../../../forestdb/include/libforestdb/fdb_errors.h"
symbols="`grep -oh 'FDB_RESULT_[A-Z0-9_]*' $header | sort | uniq`"

echo "$symbols" |                                    \
  awk 'BEGIN            {print "const ("};           \
      /FDB_RESULT_LAST/ {next;}                      \
      /FDB_RESULT_/     {print $1 " Error = C." $1}  \
      END               {print ")"}'                 \
 >> error.go

echo "$symbols" |                                                 \
 awk 'BEGIN              {print "var codeMap = map[int]string{"}; \
      /FDB_RESULT_LAST/  {next;}                                  \
      /FDB_RESULT_/      {print "C." $1 " : `" $1 "`,"}           \
      END                {print "}"}'                             \
 >> error.go

gofmt -w error.go
